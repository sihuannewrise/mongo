# Create X.509 certificates
## RootCA
sudo openssl req -x509 -nodes -new -sha256 -days 3650 -newkey rsa:4096 -keyout RootCA.key -out RootCA.pem -subj "/C=RU/CN=root@i7srv-CA"
### add .crt format
sudo openssl x509 -outform pem -in RootCA.pem -out RootCA.crt

## Host certificate
# 1. generate new key for local domains
sudo openssl req -new -nodes -newkey rsa:4096 -keyout storage/knhcloud.key -out storage/knhcloud.csr -subj "/C=RU/ST=MSC/O=KNH-Cloud-Certificates/CN=knh.cloud"
# 2. Sign host csr with rootCA (domains listed in `domains.ext`)
sudo openssl x509 -req -sha256 -days 1024 -in storage/knhcloud.csr -CA rootCA/RootCA.pem -CAkey rootCA/RootCA.key -CAcreateserial -extfile domains.ext -out storage/knhcloud.cert
# 3. remove request file
sudo rm storage/knhcloud.csr
# convert cert to p12 format
sudo openssl pkcs12 -export -inkey knhcloud.key -in knhcloud.cert -out knhcloud.p12

---
## Client (user) certificate
    openssl req -new -newkey rsa:4096 -nodes -keyout barneyRubble.key -out barneyRubble.csr
### Sign client csr with rootCA:
    openssl x509 -req -CA RootCA.crt -CAkey RootCA.key -in barneyRubble.csr -out barneyRubble.cert -days 365 -CAcreateserial
### Import client key and crt in keystore to create the "certificate" to be used in the browser:
    openssl pkcs12 -export -out barneyRubble.p12 -name "barneyRubble" -inkey barneyRubble.key -in barneyRubble.cert


# check domain certs
openssl s_client -connect almeling.ru:443 -showcerts
# cert info output
openssl x509 -in cert.pem -noout -text